{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n  input: document.querySelector(\"#datetime-picker\"),\n  button: document.querySelector('button[data-start=\"start\"]'),\n  days: document.querySelector('span[data-days=\"days\"]'),\n  hours: document.querySelector('span[data-hours=\"hours\"]'),\n  minutes: document.querySelector('span[data-minutes=\"minutes\"]'),\n  seconds: document.querySelector('span[data-seconds=\"seconds\"]'),\n};\n\nlet selectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    if (selectedDate && selectedDate > new Date()) {\n      refs.button.removeAttribute(\"disabled\");\n    } else {\n      refs.button.setAttribute(\"disabled\", \"\");  \n      iziToast.error({\n        title: 'Error',\n        message: \"Please choose a date in the future\",\n    });\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.button.addEventListener(\"click\", startTimer);\n\nfunction startTimer() {\n  refs.button.setAttribute(\"disabled\", \"\");\n  refs.input.setAttribute(\"disabled\", \"\");\n\n  const intervalId = setInterval(() => {\n    const now = new Date();\n    const timeDifference = selectedDate - now;\n\n    if (timeDifference <= 0) {\n      clearInterval(intervalId);\n    refs.input.removeAttribute(\"disabled\");\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    refs.days.textContent = String(days).padStart(2, '0');\n    refs.hours.textContent = String(hours).padStart(2, '0');\n    refs.minutes.textContent = String(minutes).padStart(2, '0');\n    refs.seconds.textContent = String(seconds).padStart(2, '0');\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconsole.log(\"Hello world\");\n\n\n\n\n"],"names":["refs","selectedDate","options","selectedDates","iziToast","flatpickr","startTimer","intervalId","timeDifference","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAOA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,OAAQ,SAAS,cAAc,4BAA4B,EAC3D,KAAM,SAAS,cAAc,wBAAwB,EACrD,MAAO,SAAS,cAAc,0BAA0B,EACxD,QAAS,SAAS,cAAc,8BAA8B,EAC9D,QAAS,SAAS,cAAc,8BAA8B,CAChE,EAEA,IAAIC,EAAe,KAEnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAC1BF,GAAgBA,EAAe,IAAI,KACrCD,EAAK,OAAO,gBAAgB,UAAU,GAEtCA,EAAK,OAAO,aAAa,WAAY,EAAE,EACvCI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAK,EAEF,CACH,EAEAC,EAAUL,EAAK,MAAOE,CAAO,EAE7BF,EAAK,OAAO,iBAAiB,QAASM,CAAU,EAEhD,SAASA,GAAa,CACpBN,EAAK,OAAO,aAAa,WAAY,EAAE,EACvCA,EAAK,MAAM,aAAa,WAAY,EAAE,EAEtC,MAAMO,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAiBP,EADX,IAAI,KAGhB,GAAIO,GAAkB,EAAG,CACvB,cAAcD,CAAU,EAC1BP,EAAK,MAAM,gBAAgB,UAAU,EACnC,MACD,CAED,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElER,EAAK,KAAK,YAAc,OAAOS,CAAI,EAAE,SAAS,EAAG,GAAG,EACpDT,EAAK,MAAM,YAAc,OAAOU,CAAK,EAAE,SAAS,EAAG,GAAG,EACtDV,EAAK,QAAQ,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,EAC1DX,EAAK,QAAQ,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,QAAQ,IAAI,aAAa"}